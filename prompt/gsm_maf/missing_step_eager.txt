def solution():
    """Kelly is grocery shopping at a supermarket and is making sure she has enough in her budget for the items in her cart. Her 5 packs of bacon cost $10 in total and she has 6 packets of chicken which each cost twice as much as a pack of bacon. She also has 3 packs of strawberries, priced at $4 each, and 7 packs of apples, each priced at half the price of a pack of strawberries. If Kelly’s budget is $65 then how much money, in dollars, does she have left in her budget?"""
    budget = 65
    bacon_packs = 5
    bacon_total_cost = 10
    chicken_packs = 6
    chicken_cost = 2 * bacon_cost
    strawberry_packs = 3
    strawberry_cost = 4
    apple_packs = 7
    apple_cost = strawberry_cost / 2
    total_cost = bacon_cost + chicken_cost + strawberry_cost + apple_cost
    money_left = budget - total_cost
    result = money_left
    return result

# Check each semantically complete block of code for any missing steps and suggest the correct way to add them. Ignore all the other types of errors.

# Let us go through the code step-by-step
    budget = 65
# looks good

# Let's check other parts
    bacon_packs = 5
    bacon_total_cost = 10
# looks good

# Let's check other parts
    chicken_packs = 6
    chicken_cost = 2 * bacon_cost
# wrong! bacon_cost is missing. Let's add it.
# wrong! we need the total cost of chicken to calculate remaining budget. Let's add it.
    
# Let's check other parts
    strawberry_packs
    strawberry_cost = 4
# wrong! we need the total cost of strawberries to calculate remaining budget. Let's add it.

# Let's check other parts
    apple_packs = 7
    apple_cost = strawberry_cost / 2
# wrong! we need the total cost of apples to calculate remaining budget. Let's add it.

# Let's check other parts
    total_cost = bacon_cost + chicken_cost + strawberry_cost + apple_cost
    money_left = budget - total_cost
    result = money_left
    return result
# looks good

# Okay, here's the rewrite:
def solution():
    """Kelly is grocery shopping at a supermarket and is making sure she has enough in her budget for the items in her cart. Her 5 packs of bacon cost $10 in total and she has 6 packets of chicken which each cost twice as much as a pack of bacon. She also has 3 packs of strawberries, priced at $4 each, and 7 packs of apples, each priced at half the price of a pack of strawberries. If Kelly’s budget is $65 then how much money, in dollars, does she have left in her budget?"""
    budget = 65
    bacon_packs = 5
    bacon_total_cost = 10
    bacon_cost = bacon_total_cost / bacon_packs
    chicken_packs = 6
    chicken_cost = 2 * bacon_cost
    chicken_total_cost = chicken_cost * chicken_packs
    strawberry_packs = 3
    strawberry_cost = 4
    strawberry_total_cost = strawberry_cost * strawberry_packs
    apple_packs = 7
    apple_cost = strawberry_cost / 2
    apple_total_cost = apple_cost * apple_packs
    total_cost = bacon_cost + chicken_cost + strawberry_cost + apple_cost
    money_left = budget - total_cost
    result = money_left
    return result

### END ###

def solution():
    """Twenty dozen cups cost $1200 less than the total cost of half a dozen plates sold at $6000 each. Calculate the total cost of buying each cup."""
    plates = 6
    plate_cost = 6000
    cups = 12 * 20
    cups_total_cost = plate_cost
    result = cup_cost
    return result

# Check each semantically complete block of code for any missing steps and suggest the correct way to add them. Ignore all the other types of errors.

# Let us go through the code step-by-step
    plates = 6
    plate_cost = 6000
# wrong! we need to calculate the total cost of plates to calculate the cost of each cup. Let's add it.

# Let's check other parts
    cups = 12 * 20
    cup_total_cost = plate_cost
# looks good

# Let's check other parts
    result = cup_cost
    return result
# wrong! we need to calculate the cost of each cup to answer the question. Let's add it.

# Okay, here's the rewrite:
def solution():
    """Twenty dozen cups cost $1200 less than the total cost of half a dozen plates sold at $6000 each. Calculate the total cost of buying each cup."""
    plates = 6
    plate_cost = 6000
    plates_total_cost = plate_cost * plates
    cups = 12 * 20
    cups_total_cost = plate_cost
    cup_cost = cups_total_cost / cups
    result = cup_cost
    return result

### END ###

def solution():
    """Carly had 80 cards, 2/5 of the cards had the letter A on them, 1/2 of the remaining had the letter B, 5/8 of the rest had the letter C on them, and the others had the letter D. How many of the cards had the letter D on them?"""
    cards_initial = 80
    cards_a = cards_initial * 2 / 5
    cards_left = cards_initial - cards_a
    cards_b = cards_left * 1 / 2
    cards_left = cards_left - cards_b
    cards_c = cards_left * 5 / 8
    cards_d = cards_left * 3 / 8
    result = cards_d
    return result

# Check each semantically complete block of code for any missing steps and suggest the correct way to add them. Ignore all the other types of errors.

# Let us go through the code step-by-step
    cards_initial = 80
# looks good

# Let's check the other parts
    cards_a = cards_initial * 2 / 5
    cards_left = cards_initial - cards_a
# looks good

# Let's check the other parts
    cards_b = cards_left * 1 / 2
    cards_left = cards_left - cards_b
# looks good

# Let's check the other parts
    cards_c = cards_left * 5 / 8
    cards_d = cards_left * 3 / 8
# looks good

# Let's check the other parts
    result = cards_d
    return result
# looks good

# There are no missing steps in the code! It is correct! Here is the rewrite (for the sake of completeness):
def solution():
    """Carly had 80 cards, 2/5 of the cards had the letter A on them, 1/2 of the remaining had the letter B, 5/8 of the rest had the letter C on them, and the others had the letter D. How many of the cards had the letter D on them?"""
    cards_initial = 80
    cards_a = cards_initial * 2 / 5
    cards_left = cards_initial - cards_a
    cards_b = cards_left * 1 / 2
    cards_left = cards_left - cards_b
    cards_c = cards_left * 5 / 8
    cards_d = cards_left * 3 / 8
    result = cards_d
    return result

### END ###

